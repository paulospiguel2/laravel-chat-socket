version: "3"

services:
  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    #container_name: web
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      # - database
    networks:
      - app-network
    links:
      - php

  # database:
  #   image: postgres:alpine
  #   #container_name: postgres
  #   restart: unless-stopped
  #   ports:
  #     - "${DB_PORT}:5432"
  #   environment:
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_DB: ${DB_DATABASE}
  #   networks:
  #     - app-network
  #   volumes:
  #     - "./docker/dbdata:/var/lib/postgresql/data"

  php:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    #container_name: app
    volumes:
      - ./:/var/www/html
    networks:
      - app-network

  composer:
    image: composer:latest
    #container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - app-network

  npm:
    image: node:lts
    restart: unless-stopped
    #container_name: node
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    depends_on:
      - php
    networks:
      - app-network

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    #container_name: artisan
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    # depends_on:
    #   - database
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
